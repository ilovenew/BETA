-- Roblox Chat Bot Script (Authorized User Check)
-- Paste this into your executor

-- Configuration
local authorizedUsers = {
    ["unishaunishaaaa"] = true,
    ["kjaniyla"] = true,
    ["killer_guy69"] = true,
    ["IMKHAN1981"] = true,
    ["BloxHatLuffy"] = true,
    ["unishalt1"] = true,
    ["ankit_2068"] = true,
    ["khursani6"] = true,
    ["user123"] = true
}
local triggerCommand = "!say"
local responseMessages = {"DR!X SCRIPT HUB ON TOP", "GET THE BEST SCR!PT OF BLOXFRUIT", "FOLLOW DR!X SCRIPT HUB ON T!KK-T0KK "} -- Three separate messages
local messageInterval = 5 -- seconds
local maxMessages = 100

-- Variables
local messageCount = 0
local isRunning = false
local connection = nil

-- Function to send chat message
function sendChatMessage(message)
    if messageCount >= maxMessages then
        isRunning = false
        if connection then
            connection:Disconnect()
        end
        return
    end
    
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(message, "All")
    messageCount = messageCount + 1
end

-- Function to handle chat messages
function onChatMessage(message, speaker)
    -- Check if the speaker is an authorized user
    if authorizedUsers[speaker.Name] then
        -- Check if the message is the trigger command
        if string.lower(message) == triggerCommand then
            if not isRunning then
                isRunning = true
                messageCount = 0
                
                -- Start sending messages
                spawn(function()
                    while isRunning and messageCount < maxMessages do
                        -- Send all three messages in sequence
                        for i, msg in ipairs(responseMessages) do
                            sendChatMessage(msg)
                            wait(1) -- Small delay between the three messages
                        end
                        wait(messageInterval) -- Wait before sending the next set
                    end
                    isRunning = false
                end)
            end
        end
    end
end

-- Main function to initialize the script
function init()
    -- Connect to chat event
    connection = game:GetService("Players").PlayerChatted:Connect(onChatMessage)
    
    -- Alternative method for games without PlayerChatted event
    if not connection.Connected then
        for _, player in pairs(game:GetService("Players"):GetPlayers()) do
            if player:FindFirstChild("Chatted") then
                connection = player.Chatted:Connect(function(message, recipient)
                    onChatMessage(message, player)
                end)
            end
        end
    end
end

-- Start the script
init()
